package com.core.mapper;

import com.core.entity.Oil;
import com.core.entity.OilExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface OilMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oil
     *
     * @mbg.generated Fri Jan 26 10:46:02 CST 2018
     */
    @SelectProvider(type=OilSqlProvider.class, method="countByExample")
    long countByExample(OilExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oil
     *
     * @mbg.generated Fri Jan 26 10:46:02 CST 2018
     */
    @DeleteProvider(type=OilSqlProvider.class, method="deleteByExample")
    int deleteByExample(OilExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oil
     *
     * @mbg.generated Fri Jan 26 10:46:02 CST 2018
     */
    @Delete({
        "delete from oil",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oil
     *
     * @mbg.generated Fri Jan 26 10:46:02 CST 2018
     */
    @Insert({
        "insert into oil (id, project, ",
        "mechanic_name, mechanic, ",
        "icount, plate_number, ",
        "driver_name, oil_type, ",
        "supplier, supplier_name, ",
        "unit_price, staff_name, ",
        "date, create_date, ",
        "staff, price, remark)",
        "values (#{id,jdbcType=INTEGER}, #{project,jdbcType=INTEGER}, ",
        "#{mechanicName,jdbcType=VARCHAR}, #{mechanic,jdbcType=INTEGER}, ",
        "#{icount,jdbcType=INTEGER}, #{plateNumber,jdbcType=VARCHAR}, ",
        "#{driverName,jdbcType=VARCHAR}, #{oilType,jdbcType=VARCHAR}, ",
        "#{supplier,jdbcType=INTEGER}, #{supplierName,jdbcType=VARCHAR}, ",
        "#{unitPrice,jdbcType=INTEGER}, #{staffName,jdbcType=VARCHAR}, ",
        "#{date,jdbcType=VARCHAR}, #{createDate,jdbcType=VARCHAR}, ",
        "#{staff,jdbcType=INTEGER}, #{price,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})"
    })
    int insert(Oil record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oil
     *
     * @mbg.generated Fri Jan 26 10:46:02 CST 2018
     */
    @InsertProvider(type=OilSqlProvider.class, method="insertSelective")
    int insertSelective(Oil record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oil
     *
     * @mbg.generated Fri Jan 26 10:46:02 CST 2018
     */
    @SelectProvider(type=OilSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="project", property="project", jdbcType=JdbcType.INTEGER),
        @Result(column="mechanic_name", property="mechanicName", jdbcType=JdbcType.VARCHAR),
        @Result(column="mechanic", property="mechanic", jdbcType=JdbcType.INTEGER),
        @Result(column="icount", property="icount", jdbcType=JdbcType.INTEGER),
        @Result(column="plate_number", property="plateNumber", jdbcType=JdbcType.VARCHAR),
        @Result(column="driver_name", property="driverName", jdbcType=JdbcType.VARCHAR),
        @Result(column="oil_type", property="oilType", jdbcType=JdbcType.VARCHAR),
        @Result(column="supplier", property="supplier", jdbcType=JdbcType.INTEGER),
        @Result(column="supplier_name", property="supplierName", jdbcType=JdbcType.VARCHAR),
        @Result(column="unit_price", property="unitPrice", jdbcType=JdbcType.INTEGER),
        @Result(column="staff_name", property="staffName", jdbcType=JdbcType.VARCHAR),
        @Result(column="date", property="date", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.VARCHAR),
        @Result(column="staff", property="staff", jdbcType=JdbcType.INTEGER),
        @Result(column="price", property="price", jdbcType=JdbcType.INTEGER),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR)
    })
    List<Oil> selectByExample(OilExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oil
     *
     * @mbg.generated Fri Jan 26 10:46:02 CST 2018
     */
    @Select({
        "select",
        "id, project, mechanic_name, mechanic, icount, plate_number, driver_name, oil_type, ",
        "supplier, supplier_name, unit_price, staff_name, date, create_date, staff, price, ",
        "remark",
        "from oil",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="project", property="project", jdbcType=JdbcType.INTEGER),
        @Result(column="mechanic_name", property="mechanicName", jdbcType=JdbcType.VARCHAR),
        @Result(column="mechanic", property="mechanic", jdbcType=JdbcType.INTEGER),
        @Result(column="icount", property="icount", jdbcType=JdbcType.INTEGER),
        @Result(column="plate_number", property="plateNumber", jdbcType=JdbcType.VARCHAR),
        @Result(column="driver_name", property="driverName", jdbcType=JdbcType.VARCHAR),
        @Result(column="oil_type", property="oilType", jdbcType=JdbcType.VARCHAR),
        @Result(column="supplier", property="supplier", jdbcType=JdbcType.INTEGER),
        @Result(column="supplier_name", property="supplierName", jdbcType=JdbcType.VARCHAR),
        @Result(column="unit_price", property="unitPrice", jdbcType=JdbcType.INTEGER),
        @Result(column="staff_name", property="staffName", jdbcType=JdbcType.VARCHAR),
        @Result(column="date", property="date", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.VARCHAR),
        @Result(column="staff", property="staff", jdbcType=JdbcType.INTEGER),
        @Result(column="price", property="price", jdbcType=JdbcType.INTEGER),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR)
    })
    Oil selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oil
     *
     * @mbg.generated Fri Jan 26 10:46:02 CST 2018
     */
    @UpdateProvider(type=OilSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Oil record, @Param("example") OilExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oil
     *
     * @mbg.generated Fri Jan 26 10:46:02 CST 2018
     */
    @UpdateProvider(type=OilSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Oil record, @Param("example") OilExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oil
     *
     * @mbg.generated Fri Jan 26 10:46:02 CST 2018
     */
    @UpdateProvider(type=OilSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Oil record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oil
     *
     * @mbg.generated Fri Jan 26 10:46:02 CST 2018
     */
    @Update({
        "update oil",
        "set project = #{project,jdbcType=INTEGER},",
          "mechanic_name = #{mechanicName,jdbcType=VARCHAR},",
          "mechanic = #{mechanic,jdbcType=INTEGER},",
          "icount = #{icount,jdbcType=INTEGER},",
          "plate_number = #{plateNumber,jdbcType=VARCHAR},",
          "driver_name = #{driverName,jdbcType=VARCHAR},",
          "oil_type = #{oilType,jdbcType=VARCHAR},",
          "supplier = #{supplier,jdbcType=INTEGER},",
          "supplier_name = #{supplierName,jdbcType=VARCHAR},",
          "unit_price = #{unitPrice,jdbcType=INTEGER},",
          "staff_name = #{staffName,jdbcType=VARCHAR},",
          "date = #{date,jdbcType=VARCHAR},",
          "create_date = #{createDate,jdbcType=VARCHAR},",
          "staff = #{staff,jdbcType=INTEGER},",
          "price = #{price,jdbcType=INTEGER},",
          "remark = #{remark,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Oil record);
}