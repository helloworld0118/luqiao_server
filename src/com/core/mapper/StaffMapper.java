package com.core.mapper;

import com.core.entity.Staff;
import com.core.entity.StaffExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface StaffMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table staff
     *
     * @mbg.generated Thu Jan 11 15:18:44 CST 2018
     */
    @SelectProvider(type=StaffSqlProvider.class, method="countByExample")
    long countByExample(StaffExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table staff
     *
     * @mbg.generated Thu Jan 11 15:18:44 CST 2018
     */
    @DeleteProvider(type=StaffSqlProvider.class, method="deleteByExample")
    int deleteByExample(StaffExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table staff
     *
     * @mbg.generated Thu Jan 11 15:18:44 CST 2018
     */
    @Delete({
        "delete from staff",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table staff
     *
     * @mbg.generated Thu Jan 11 15:18:44 CST 2018
     */
    @Options(useGeneratedKeys=true)
    @Insert({
        "insert into staff (id, name, ",
        "sex, education, ",
        "position, password, ",
        "code, hiredate, ",
        "idcard, mobile, ",
        "type, state, department, ",
        "leader, create_date, ",
        "remark)",
        "values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, ",
        "#{sex,jdbcType=INTEGER}, #{education,jdbcType=VARCHAR}, ",
        "#{position,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, ",
        "#{code,jdbcType=VARCHAR}, #{hiredate,jdbcType=VARCHAR}, ",
        "#{idcard,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, ",
        "#{type,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{department,jdbcType=INTEGER}, ",
        "#{leader,jdbcType=INTEGER}, #{createDate,jdbcType=VARCHAR}, ",
        "#{remark,jdbcType=VARCHAR})"
    })
    int insert(Staff record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table staff
     *
     * @mbg.generated Thu Jan 11 15:18:44 CST 2018
     */
    @Options(useGeneratedKeys=true)
    @InsertProvider(type=StaffSqlProvider.class, method="insertSelective")
    int insertSelective(Staff record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table staff
     *
     * @mbg.generated Thu Jan 11 15:18:44 CST 2018
     */
    @SelectProvider(type=StaffSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="sex", property="sex", jdbcType=JdbcType.INTEGER),
        @Result(column="education", property="education", jdbcType=JdbcType.VARCHAR),
        @Result(column="position", property="position", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="code", property="code", jdbcType=JdbcType.VARCHAR),
        @Result(column="hiredate", property="hiredate", jdbcType=JdbcType.VARCHAR),
        @Result(column="idcard", property="idcard", jdbcType=JdbcType.VARCHAR),
        @Result(column="mobile", property="mobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="state", property="state", jdbcType=JdbcType.INTEGER),
        @Result(column="department", property="department", jdbcType=JdbcType.INTEGER),
        @Result(column="leader", property="leader", jdbcType=JdbcType.INTEGER),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR)
    })
    List<Staff> selectByExample(StaffExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table staff
     *
     * @mbg.generated Thu Jan 11 15:18:44 CST 2018
     */
    @Select({
        "select",
        "id, name, sex, education, position, password, code, hiredate, idcard, mobile, ",
        "type, state, department, leader, create_date, remark",
        "from ${database}.staff",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="sex", property="sex", jdbcType=JdbcType.INTEGER),
        @Result(column="education", property="education", jdbcType=JdbcType.VARCHAR),
        @Result(column="position", property="position", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="code", property="code", jdbcType=JdbcType.VARCHAR),
        @Result(column="hiredate", property="hiredate", jdbcType=JdbcType.VARCHAR),
        @Result(column="idcard", property="idcard", jdbcType=JdbcType.VARCHAR),
        @Result(column="mobile", property="mobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="state", property="state", jdbcType=JdbcType.INTEGER),
        @Result(column="department", property="department", jdbcType=JdbcType.INTEGER),
        @Result(column="leader", property="leader", jdbcType=JdbcType.INTEGER),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR)
    })
    Staff selectByPrimaryKey(@Param("database") String database,@Param("id")Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table staff
     *
     * @mbg.generated Thu Jan 11 15:18:44 CST 2018
     */
    @UpdateProvider(type=StaffSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Staff record, @Param("example") StaffExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table staff
     *
     * @mbg.generated Thu Jan 11 15:18:44 CST 2018
     */
    @UpdateProvider(type=StaffSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Staff record, @Param("example") StaffExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table staff
     *
     * @mbg.generated Thu Jan 11 15:18:44 CST 2018
     */
    @UpdateProvider(type=StaffSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Staff record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table staff
     *
     * @mbg.generated Thu Jan 11 15:18:44 CST 2018
     */
    @Update({
        "update staff",
        "set name = #{name,jdbcType=VARCHAR},",
          "sex = #{sex,jdbcType=INTEGER},",
          "education = #{education,jdbcType=VARCHAR},",
          "position = #{position,jdbcType=VARCHAR},",
          "password = #{password,jdbcType=VARCHAR},",
          "code = #{code,jdbcType=VARCHAR},",
          "hiredate = #{hiredate,jdbcType=VARCHAR},",
          "idcard = #{idcard,jdbcType=VARCHAR},",
          "mobile = #{mobile,jdbcType=VARCHAR},",
          "type = #{type,jdbcType=INTEGER},",
          "state = #{state,jdbcType=INTEGER},",
          "department = #{department,jdbcType=INTEGER},",
          "leader = #{leader,jdbcType=INTEGER},",
          "create_date = #{createDate,jdbcType=VARCHAR},",
          "remark = #{remark,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Staff record);
}